var renderer=document.createElement("canvas");document.body.appendChild(this.renderer);var canvas=document.querySelector("canvas"),centerX=innerWidth/2,centerY=innerHeight/2;canvas.style.position="absolute",canvas.style.zIndex="-4";var WDG=9.8,color=["red","blue","white","black"],c=canvas.getContext("2d");function Scene(t=100,i=100){this.width=t,this.height=i,renderer.width=this.width,renderer.height=this.height,this.solidShader=function(t="black"){renderer.style.backgroundColor=t},this.gradientShader=function(t="red,green,blue"){renderer.style.backgroundImage="linear-gradient("+t+")"},this.MKflex=function(){document.body.style.margin="0"},this.Scrolloff=function(){document.body.style.overflow="hidden"}}function setData(t){this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height}function Cube(t,i,h,s,n,e){this.rotation=n,this.x=t,this.y=i,this.Rigidbody=!1,this.Kinametic=!1,this.Static=!1,this.width=h,this.height=s,this.color=e,this.load=function(){c.beginPath(),c.translate(this.x+this.width/2,this.y+this.height/2),c.rotate(this.rotation*Math.PI/180),c.translate(-(this.x+this.width/2),-(this.y+this.height/2)),c.fillStyle=this.color,c.fillRect(this.x,this.y,this.width,this.height),c.fill(),c.setTransform(1,0,0,1,0,0)},this.moveY=function(t){this.y+=t},this.moveX=function(t){this.x+=t}}function ImageSrc(t,i,h,s,n,e=0){this.img=new Image(this.src),this.img.src=t,this.x=i,this.y=h,this.rotation=e,this.width=s,this.height=n,this.load=function(){c.translate(this.x+this.width/2,this.y+this.height/2),c.rotate(this.rotation*Math.PI/180),c.translate(-(this.x+this.width/2),-(this.y+this.height/2)),c.beginPath(),c.drawImage(this.img,this.x,this.y,this.width,this.height),c.setTransform(1,0,0,1,0,0)},this.moveY=function(t){this.y+=t},this.moveX=function(t){this.x+=t}}function Sphere(t,i,h,s){this.x=t,this.y=i,this.radius=h,this.color=s,this.load=function(){c.beginPath(),c.fillStyle=this.color,c.arc(this.x,this.y,this.radius,0,2*Math.PI,!1),c.fill()},this.moveX=function(t){this.x+=t},this.moveY=function(t){this.y+=t}}function log(t){console.log(t)}function CircleRox(t,i,h,s){return this.destx=h-t,this.desty=s-i,Math.sqrt(Math.pow(destx,2)+Math.pow(desty,2))}function Gradient(t,i,h,s,n,e){this.color=c.createLinearGradient(t,i,h,s),this.color.addColorStop(0,n),this.color.addColorStop(1,e)}function Path(t=0){return Math.floor(Math.random()*t)}function frame(t){return requestAnimationFrame(t)}function clear(t,i,h,s){return c.clearRect(t,i,h,s)}function Position(t,i,h,s,n){this.x=t,this.y=i,this.radius=h,this.width=s,this.height=n}function Pack(...t){this.data=t}function Path(t){this.location=t}function LockData(t,i){this.name=t,this.rdhdsvml=i,this.get=function(t){if(t==this.name)return this.rdhdsvml}}function Class(){this.name,this.value,this.set=function(t,i){this.name=t,this.value=i},this.get=function(t){if(t==this.name)return this.value}}function CubeCollision(t,i){return t.x+t.width>=i.x&&t.x<=i.x+i.width&&t.y<=i.y+i.height&&t.y+t.height>=i.y}function SphereCollision(t,i){return CircleRox(t.x,t.y,i.x,i.y)<t.radius+i.radius}function cubeJoint(t,i,h,s){t.x=i.x-h,t.y=i.y-s}function BronchY(t,i,h){CubeCollision(t,i)&&(t.y-=h/2,i.y+=2*h)}function BronchX(t,i,h,s=3e3){CubeCollision(t,i)&&(t.x-=h/2,i.x+=2*h,setTimeout((()=>{t.x+=h/2,i.x-=2*h}),s))}function Destroy(t,i=0){setTimeout((()=>{t.x=99999999999,t.y=99999999999}),1e3*i)}function Rigidbody(t,i,h){t.Rigidbody=!0,i.Static=!0,this.gravity=1,this.gravity+=h,this.weight=h,this.axis="right",CubeCollision(t,i)||(t.y+=this.gravity,(this.axis="left")?t.rotation-=h/1.3:(this.axis="right")&&(t.rotation+=h/1.3)),CubeCollision(t,i)&&(t.y=i.y-t.height,t.rotation=0,t.x+t.width/2<=i.x&&(t.rotation-=5,t.x-=t.width/(t.width/2),t.y+=10,this.axis="left"),t.x+t.width/2>=i.x+i.width&&(t.rotation+=5,t.x+=t.width/(t.width/2),t.y+=10,this.axis="right"))}function Kinametic(t,i){this.gravity=1,t.Kinametic=!0,this.gravity+=i,this.weight=i,t.y+=gravity,this.rotation=function(){t.rotation+=i/this.gravity}}function RigidSphere(t,i,h){this.gravity=1,this.gravity+=h,this.weight=h,SphereCollision(t,i)||(t.y+=this.gravity),SphereCollision(t,i)&&(t.y=i.y-(t.radius+i.radius))}function Type(t){return t.radius?"shape : <Sphere>":t.width?"shape : <Cube>":void 0}function onCollisionEnter(t,i){if(t.width&&i.width&&t.x+t.width>=i.x&&t.x<=i.x+i.width&&t.y<=i.y+i.height&&t.y+t.height>=i.y)return!0;if(t.radius&&i.radius){if(CircleRox(t.x,t.y,i.x,i.y)<t.radius+i.radius)return!0}else if(t.radius&&i.width){if(t.x+t.radius>=i.x&&t.x-t.radius<=i.x+i.width&&t.y+t.radius>=i.y&&t.y-t.radius<=i.y+i.height)return!0}else if(t.width,i.radius&&i.x+i.radius>=t.x&&i.x-i.radius<=t.x+t.width&&i.y+i.radius>=t.y&&i.y-i.radius<=t.y+t.height)return!0}function rotate(t,i){t.rotation+=i}var Debug={log:function(t){log(t)}};function Data(t="",i=0,h=0,s=0,n=0,e=0,o="transparent"){this.src=t,this.x=i,this.y=h,this.width=s,this.height=n,this.radius=e,this.color=o}function RANDOM_CUSTOMIZE(t){this.color=["red","green","blue","white","black"],t.x=Math.random()*innerWidth,t.y=Math.random()*innerHeight,t.width=100*Math.random(),t.height=100*Math.random(),t.color=this.color[Math.random()*this.color.length],t.rotation=360*Math.random(),t.rotation+=5}